{"version":3,"sources":["components/Button/Button.js","context.js","components/Card/Card.js","components/CardList/CardList.js","components/CartItem/CartItem.js","components/Cart/Cart.js","utils/storage.js","App.js","index.js"],"names":["Button","content","clickHandler","id","disabled","operation","classButton","onClick","className","Context","React","createContext","Card","card","index","setCart","useContext","amount","countAddToCart","amountPerPerson","maxPerPerson","isDisabledCardButton","isMaxPerPerson","productName","price","CardList","cards","categoryCount","map","CartItem","count","sum","Cart","cardsToCart","filter","cartSum","reduce","cardCount","length","storage","key","data","JSON","parse","localStorage","getItem","setItem","stringify","clearStorage","clear","window","location","reload","console","log","App","useState","setCards","loading","setLoading","setCategoryCount","recalculateCategoty","cartCount","checkAmount","useEffect","fetch","then","response","json","Provider","value","currentCard","find","getCurrentCard","setCountCardToCart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16aa5547.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css'\n\nfunction Button({content, clickHandler, id, disabled, operation, classButton}) {\n  return (\n      <button\n        onClick={() => clickHandler(id, operation)}\n        className={\"button \" + (disabled ? 'button--disabled ' : '') + classButton}\n        disabled={disabled}>\n          {content}\n      </button>\n  )\n}\n\nexport default Button;","import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, { useContext } from 'react';\nimport './Card.css';\nimport Context from '../../context';\nimport Button from '../Button/Button';\n\nfunction Card({card, index}) {\n  const {setCart} = useContext(Context);\n  const amount = card.amount - (card.countAddToCart || 0);\n  const amountPerPerson = card.maxPerPerson === (card.countAddToCart || 0);\n  const isDisabledCardButton = !amount || amountPerPerson;\n  const isMaxPerPerson = amount > 0 && amountPerPerson;\n\n  return (\n    <li className=\"card\">\n      <p className=\"card__wrap\">\n        <b className=\"card__index\">{index + 1}</b>\n        <span className=\"card__text\">Осталось {amount} {card.productName} по {card.price} рублей</span>\n        <Button\n          id={card.id}\n          disabled={isDisabledCardButton}\n          clickHandler={setCart}\n          classButton='card__button'\n          operation='add'\n          content='Добавить в корзину'/>\n      </p>\n      {isMaxPerPerson && <span className=\"card__max-per-person\">К сожалению данный товар ограничен за одну покупку. Вы можете приобрести не более {card.maxPerPerson} шт.</span>}\n    </li>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport './CardList.css'\nimport Card from '../Card/Card';\n\nfunction CardList({cards, categoryCount}) {\n\n  return (\n    <section className=\"card-list\">\n      <h2>Имеющиеся категории товаров {categoryCount}</h2>\n      <ul className=\"card-list__list\">\n        {cards.map((card, index) => {\n          return (\n            <Card\n              key={card.id}\n              card={card}\n              index={index}\n            />\n          )\n        })}\n      </ul>\n    </section>\n  )\n}\n\nexport default CardList;","import React, { useContext } from 'react';\nimport './CartItem.css'\nimport Context from '../../context';\nimport Button from '../Button/Button';\n\nfunction CartItem({card, count, sum}) {\n  const {setCart} = useContext(Context);\n  const amountPerPerson = card.maxPerPerson === (card.countAddToCart || 0);\n  const isDisabledCardButton = amountPerPerson;\n\n  return (\n      <li className=\"CartItem\">\n        <p>Телефон (\n          <Button\n            id={card.id}\n            clickHandler={setCart}\n            classButton='cart-item__button-remove'\n            operation='remove'\n            content='-'/>\n              {count} шт\n          <Button\n            id={card.id}\n            clickHandler={setCart}\n            disabled={isDisabledCardButton}\n            classButton='cart-item__button-add'\n            operation='add'\n            content='+'/>\n              ) на сумму {sum} рублей (\n          <Button\n            id={card.id}\n            clickHandler={setCart}\n            operation='clear'\n            content='удалить'/>\n          )\n        </p>\n      </li>\n  )\n}\n\nexport default CartItem;","import React from 'react';\nimport CartItem from '../CartItem/CartItem';\nimport './Cart.css'\n\nfunction Cart({cards}) {\n  const cardsToCart = cards.filter(card => card.countAddToCart);\n  const cartSum = cardsToCart.reduce((sum, card) => {\n    return sum + (card.countAddToCart * card.price)\n  }, 0);\n  const cardCount = cardsToCart.reduce((sum, card) => {\n    return sum + card.countAddToCart\n  }, 0)\n\n  return (\n    <div className=\"cart\">\n      {\n        cardsToCart.length\n        ? (\n            <>\n              <h2>В корзине {cardCount} товаров на сумму {cartSum} рублей</h2>\n              <ol>\n                {\n                  cardsToCart.map((card, index) => {\n                  return <CartItem\n                            key={card.id}\n                            card={card}\n                            index={index}\n                            count={card.countAddToCart}\n                            sum={card.price * card.countAddToCart}\n                          />\n                  })\n                }\n              </ol>\n            </>\n          )\n        : <p>Корзина пуста</p>\n      }\n    </div>\n  )\n}\n\nexport default Cart;","export function storage(key, data) {\n  if (!data) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  localStorage.setItem(key, JSON.stringify(data));\n}\n\n\nexport function clearStorage() {\n  localStorage.clear();\n  window.location.reload();\n};","import React, { useEffect } from 'react';\nimport './App.css';\nimport Button from './components/Button/Button';\nimport CardList from './components/CardList/CardList'\nimport Cart from './components/Cart/Cart';\nimport Context from './context';\nimport { storage, clearStorage } from './utils/storage';\n\nconsole.log(storage, clearStorage);\n\nfunction App() {\n  const MIN_COUNT_CARD = 0;\n  const [cards, setCards] = React.useState(storage('cards') || []);\n  const [loading, setLoading] = React.useState(true);\n  const [categoryCount, setCategoryCount] = React.useState(0);\n\n  function recalculateCategoty(cards) {\n    return cards.filter(card => {\n      return checkAmount(card);\n    }).length;\n  }\n\n  function checkAmount(card) {\n    const cartCount = card.countAddToCart || 0;\n    return (card.amount - cartCount) > 0 && (card.maxPerPerson - cartCount) > 0;\n  }\n\n  useEffect(() => {\n    if (cards.length) {\n      setCards(cards);\n      setCategoryCount(recalculateCategoty(cards))\n      setLoading(false)\n    } else {\n      fetch('https://my-json-server.typicode.com/alex-koshara/travelata_testing/products?_limit=5')\n        .then(response => response.json())\n        .then(cards => {\n          setCards(cards)\n          setCategoryCount(recalculateCategoty(cards))\n          setLoading(false)\n        })\n    }\n  }, [])\n\n\n  useEffect(() => {\n    setCategoryCount(recalculateCategoty(cards))\n    setCards(cards)\n\n    storage('cards', cards);\n  }, [cards])\n\n  function setCountCardToCart(card, operation) {\n    card.countAddToCart = card.countAddToCart || MIN_COUNT_CARD;\n    switch (operation) {\n      case 'add':\n        return card.countAddToCart++;\n      case 'remove':\n        return card.countAddToCart--;\n      case 'clear':\n        return card.countAddToCart = 0;\n      default:\n        return;\n    }\n  }\n\n  function getCurrentCard(cards, id) {\n    return cards.find(card => card.id === id);\n  }\n\n  function setCart(id, operation) {\n    const currentCard = getCurrentCard(cards, id);\n    setCountCardToCart(currentCard, operation);\n\n    setCards(cards.map(card => {\n      if (card.id === currentCard.id) {\n        cards.countAddToCart = currentCard.countAddToCart;\n      }\n\n      return card;\n    }))\n  }\n\n  return (\n    <Context.Provider value={{ setCart }}>\n      <div className=\"container\">\n        {\n          cards.length\n          ? (<div className=\"main\">\n              <CardList cards={cards} categoryCount={categoryCount} />\n              <Cart cards={cards} />\n              <Button\n                  clickHandler={clearStorage}\n                  classButton='button--clear'\n                  operation='clear'\n                  content='Очистить localStorage'/>\n            </div>)\n          : (loading ? null : <p>No cards</p>)\n        }\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}